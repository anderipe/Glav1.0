/*
 * File: app/view/PanelResumen.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('siadno.view.PanelResumen', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.PanelResumen',

    height: 600,
    width: 360,
    layout: {
        align: 'stretch',
        type: 'vbox'
    },
    collapsed: false,
    iconCls: 'icon-layout',
    title: 'Resumen',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    flex: 1,
                    margins: '3 3 3 3',
                    height: 65,
                    id: 'formParametros2',
                    maxHeight: 65,
                    layout: {
                        align: 'stretch',
                        type: 'hbox'
                    },
                    bodyPadding: 10,
                    url: 'clases/interfaces/InterfazRegistroServicios.php',
                    items: [
                        {
                            xtype: 'datefield',
                            flex: 10,
                            margins: '0 3 0 0',
                            fieldLabel: 'Fecha Inicial',
                            labelAlign: 'top',
                            name: 'fechainicial2',
                            submitFormat: 'Y-m-d',
                            listeners: {
                                change: {
                                    fn: me.onDatefieldChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'combobox',
                            flex: 15,
                            width: 330,
                            fieldLabel: 'Encargado',
                            labelAlign: 'top',
                            name: 'idempleado',
                            value: 0,
                            editable: false,
                            autoSelect: false,
                            displayField: 'nombres',
                            queryMode: 'local',
                            store: 'dumyStore',
                            valueField: 'idempleado',
                            listeners: {
                                change: {
                                    fn: me.onComboboxChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            flex: 7,
                            margin: '0 0 0 3',
                            iconAlign: 'top',
                            iconCls: 'icon-page_go',
                            text: 'Recargar',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick2,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    margins: '3 3 3 3',
                    id: 'gridResumen',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'matricula',
                            text: 'Matricula',
                            flex: 10
                        },
                        {
                            xtype: 'numbercolumn',
                            summaryType: 'sum',
                            align: 'right',
                            dataIndex: 'total',
                            text: 'Valor',
                            flex: 5,
                            format: '0,000'
                        },
                        {
                            xtype: 'numbercolumn',
                            summaryType: 'sum',
                            align: 'right',
                            dataIndex: 'valor',
                            text: '40%',
                            flex: 5,
                            format: '0,000'
                        }
                    ],
                    features: [
                        {
                            ftype: 'summary'
                        }
                    ]
                }
            ],
            listeners: {
                added: {
                    fn: me.onPanelAdded,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onDatefieldChange: function(field, newValue, oldValue, eOpts) {
        this.traerResumen();
    },

    onComboboxChange: function(field, newValue, oldValue, eOpts) {
        this.traerResumen();
    },

    onButtonClick2: function(button, e, eOpts) {
        this.traerResumen();
    },

    onPanelAdded: function(component, container, pos, eOpts) {
        var clase=Ext.ClassManager.get("siadno.store.registroservicios.resumen");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.registroservicios.resumen', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: true,
                        storeId: Ext.id(),
                        proxy: {
                            extraParams:{accion:116},
                            type: 'ajax',
                            url: 'clases/interfaces/InterfazRegistroServicios.php',
                            reader: {
                                type: 'json',
                                idProperty: 'idservicio',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idservicio'
                        },
                        {
                            name: 'matricula'
                        },
                        {
                            name: 'total',
                            type: 'float'
                        },
                        {
                            name: 'valor',
                            type: 'float'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }

        clase=Ext.ClassManager.get("siadno.store.registroservicios.encargados3");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.registroservicios.encargados3', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: true,
                        storeId: Ext.id(),
                        proxy: {
                            extraParams:{accion:104},
                            type: 'ajax',
                            url: 'clases/interfaces/InterfazRegistroServicios.php',
                            reader: {
                                type: 'json',
                                idProperty: 'idempleado',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idempleado'
                        },
                        {
                            name: 'nombres'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }


        this.idEmpleado=Ext.ComponentQuery.query('PanelResumen field[name=idempleado]')[0];
        this.idEmpleado.bindStore(Ext.create('siadno.store.registroservicios.encargados3'));
        this.idEmpleado.getStore().load();

        this.gridResumen=Ext.ComponentQuery.query('PanelResumen grid[id=gridResumen]')[0];
        this.gridResumen.reconfigure(Ext.create('siadno.store.registroservicios.resumen'));

        this.fechaInicial=Ext.ComponentQuery.query('PanelResumen datefield[name=fechainicial2]')[0];

        this.fechaInicial.suspendEvents(false);

        var dt = new Date();
        this.fechaInicial.setValue(dt);


        this.fechaInicial.resumeEvents();


        //this.traerResumen();
    },

    traerResumen: function() {
        this.gridResumen.getStore().getProxy().extraParams.fechainicial=this.fechaInicial.getSubmitData().fechainicial2;
        this.gridResumen.getStore().getProxy().extraParams.idempleado=this.idEmpleado.getValue();
        this.gridResumen.getStore().load();
    }

});