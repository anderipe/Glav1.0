/*
 * File: app/view/servicios/otros/resumenahorros.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('siadno.view.servicios.otros.resumenahorros', {
    extend: 'Ext.window.Window',
    alias: 'widget.ServiciosOtrosResumenAhorros',

    height: 600,
    width: 800,
    layout: {
        align: 'stretch',
        type: 'vbox'
    },
    iconCls: 'icon-layout',
    title: 'Resumen de Ahorros',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    flex: 1,
                    margins: '3 3 3 3',
                    height: 65,
                    maxHeight: 65,
                    layout: {
                        align: 'stretch',
                        type: 'hbox'
                    },
                    bodyPadding: 10,
                    url: 'clases/interfaces/InterfazRegistroServicios.php',
                    items: [
                        {
                            xtype: 'datefield',
                            flex: 10,
                            margins: '0 3 0 0',
                            fieldLabel: 'Año del Informe (Seleccione cualquier día del año)',
                            labelAlign: 'top',
                            name: 'fecha',
                            format: 'Y/m/d',
                            submitFormat: 'Y-m-d',
                            listeners: {
                                change: {
                                    fn: me.onDatefieldChange,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    margins: '3 3 3 3',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return '<div><b>'+value+'</b></div>';
                            },
                            width: 190,
                            dataIndex: 'd0'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }


                            },
                            summaryType: 'sum',
                            dataIndex: 'd1'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd2'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd3'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd4'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd5'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd6'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd7'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd8'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd9'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd10'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd11'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd12'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd13',
                            editor: {
                                xtype: 'numberfield',
                                allowDecimals: false,
                                decimalPrecision: 0,
                                maxValue: 1000000,
                                minValue: -1000000,
                                step: 5000
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd14'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd15'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd16'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd17'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd18'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd19'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return store.miRender(rowIndex, value);
                            },
                            summaryRenderer: function(val, params, data) {
                                var valorNumerico=val*1.0;
                                var valor=Ext.util.Format.number(val, '0,000.00');

                                if(valorNumerico>0){            
                                    return "<div style='color:red; text-align:right'>$"+valor+"</div>";
                                }else 
                                if(valorNumerico<0){            
                                    return "<div style='color:green; text-align:right'>$"+valor+"</div>";
                                }else{
                                    return "<div style='text-align:right'>$"+valor+"</div>";
                                }
                            },
                            summaryType: 'sum',
                            dataIndex: 'd20'
                        }
                    ],
                    features: [
                        {
                            ftype: 'summary'
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    flex: 1,
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'buttongroup',
                            columns: 1,
                            layout: {
                                columns: 1,
                                type: 'table'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    iconCls: 'icon-door_out',
                                    text: 'Salir',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClickSalir1,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                show: {
                    fn: me.onPanelShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onDatefieldChange: function(field, newValue, oldValue, eOpts) {
        this.traerResumen();
    },

    onButtonClickSalir1: function(button, e, eOpts) {
        this.close();
    },

    onPanelShow: function(component, eOpts) {
        this.miRender=function(rowIndex, value){
            var valorNumerico=value*1.0;
            var valor=Ext.util.Format.number(value, '0,000');


            if(valorNumerico>0){            
                return "<div style='color:red; text-align:right'>$"+valor+"</div>";
            }else 
            if(valorNumerico<0){            
                return "<div style='color:green; text-align:right'>$"+valor+"</div>";
            }else{
                return "<div style='text-align:right'>$"+valor+"</div>";
            }

        };

        var clase=Ext.ClassManager.get("siadno.store.servicios3.listaempleados2");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.servicios3.listaempleados2', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: false,
                        storeId: Ext.id(),
                        proxy: {
                            extraParams:{accion:101},
                            type: 'ajax',
                            url: 'clases/interfaces/InterfazServiciosResumenAhorros.php',
                            reader: {
                                type: 'json',
                                idProperty: 'idempleado',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idempleado'
                        },
                        {
                            name: 'nombres'
                        },
                        {
                            name: 'abreviatura'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }

        clase=Ext.ClassManager.get("siadno.store.servicios3.ahorros");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.servicios3.ahorros', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: false,
                        storeId: Ext.id(),
                        proxy: {
                            extraParams:{accion:102},
                            type: 'ajax',
                            url: 'clases/interfaces/InterfazServiciosResumenAhorros.php',
                            reader: {
                                type: 'json',
                                idProperty: 'idempleado',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'd0'
                        },
                        {
                            name: 'd1'
                        },
                        {
                            name: 'd2'
                        },
                        {
                            name: 'd3'
                        },
                        {
                            name: 'd4'
                        },
                        {
                            name: 'd5'
                        },
                        {
                            name: 'd6'
                        },
                        {
                            name: 'd7'
                        },
                        {
                            name: 'd8'
                        },
                        {
                            name: 'd9'
                        },
                        {
                            name: 'd10'
                        },
                        {
                            name: 'd11'
                        },
                        {
                            name: 'd12'
                        },
                        {
                            name: 'd13'
                        },
                        {
                            name: 'd14'
                        },
                        {
                            name: 'd15'
                        },
                        {
                            name: 'd16'
                        },
                        {
                            name: 'd17'
                        },
                        {
                            name: 'd18'
                        },
                        {
                            name: 'd19'
                        },
                        {
                            name: 'd20'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }


        this.grid=Ext.ComponentQuery.query('ServiciosOtrosResumenAhorros grid')[0];
        this.fecha=Ext.ComponentQuery.query('ServiciosOtrosResumenAhorros datefield')[0];
        this.fecha.suspendEvents(false);

        var dt = new Date();
        this.fecha.setValue(dt);

        this.fecha.resumeEvents();


        //alert(this.grid.columns);
        this.storeEmpleados=Ext.create('siadno.store.servicios3.listaempleados2');
        this.storeEmpleados.load({
            scope: this,
            callback: function(records, operation, success) {
                var numEmpleados=this.storeEmpleados.count();
                var numColumnas=this.grid.columns.length;        

                for(var i=0; i<numColumnas; i++){            
                    var columna=this.grid.columns[i];            

                    if(i==0){                                  
                        columna.setText('Semana del Año');
                        columna.updateLayout();                
                    }else{
                        if(i==numEmpleados+1){                     
                            columna.setText('Totales');
                            columna.updateLayout();                
                        }else{
                            if(i<numEmpleados+1){
                                var registro=this.storeEmpleados.getAt(i-1);                        
                                columna.setText(registro.get('abreviatura'));
                                columna.updateLayout();  
                            }
                        }
                    }



                    columna.setVisible(true);
                    if(i>numEmpleados+1){
                        columna.setVisible(false);                                
                    }
                };

                this.grid.reconfigure(Ext.create('siadno.store.servicios3.ahorros'));
                this.grid.getStore().miRender=this.miRender;
                this.grid.storeEmpleados=this.storeEmpleados;            
                this.grid.traerResumen=this.traerResumen;        
                this.traerResumen();
            }
        });

    },

    traerResumen: function() {
        this.grid.getStore().getProxy().extraParams.fecha=this.fecha.getSubmitData().fecha;
        this.grid.getStore().load();
    }

});