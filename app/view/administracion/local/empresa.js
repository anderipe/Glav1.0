/*
 * File: app/view/administracion/local/empresa.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('siadno.view.administracion.local.empresa', {
    extend: 'Ext.window.Window',
    alias: 'widget.AdministracionLocalNotaria',

    GUARDAR_NOTARIA: '101',
    CARGAR_NOTARIA: '102',
    CARGAR_PERSONAL: '103',
    GUARDAR_PERSONAL: '104',
    height: 480,
    width: 640,
    resizable: false,
    layout: {
        type: 'fit'
    },
    closable: false,
    iconCls: 'icon-house_star',
    title: 'Mi Empresa',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'tabpanel',
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'form',
                            id: 'datosBasicos',
                            itemId: '',
                            bodyPadding: 10,
                            title: 'Datos Basicos',
                            url: 'clases/interfaces/mantenimiento/local/InterfazEmpresa.php',
                            items: [
                                {
                                    xtype: 'fieldset',
                                    itemId: 'datosBasicos',
                                    padding: '0 10 0 10',
                                    title: 'Datos Basicos',
                                    items: [
                                        {
                                            xtype: 'hiddenfield',
                                            anchor: '100%',
                                            fieldLabel: 'Label',
                                            name: 'idpersona'
                                        },
                                        {
                                            xtype: 'fieldcontainer',
                                            height: 27,
                                            margin: 0,
                                            padding: 0,
                                            layout: {
                                                align: 'stretch',
                                                type: 'hbox'
                                            },
                                            fieldLabel: 'Identificación',
                                            items: [
                                                {
                                                    xtype: 'combobox',
                                                    margins: '0',
                                                    margin: '0 1 0 0',
                                                    padding: 0,
                                                    width: 68,
                                                    labelPad: 0,
                                                    name: 'idtipoidentificacion',
                                                    value: 0,
                                                    editable: false,
                                                    displayField: 'abreviatura',
                                                    queryMode: 'local',
                                                    store: 'dumyStore',
                                                    valueField: 'idtipoidentificacion',
                                                    listeners: {
                                                        select: {
                                                            fn: me.onComboboxSelect2,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    margins: '0',
                                                    margin: '0 1 0 0',
                                                    padding: 0,
                                                    width: 234,
                                                    labelPad: 0,
                                                    name: 'identificacion',
                                                    enableKeyEvents: true,
                                                    hideTrigger: true,
                                                    autoSelect: false,
                                                    displayField: 'identificacion',
                                                    minChars: 5,
                                                    queryParam: 'identificacion',
                                                    store: 'dumyStore',
                                                    valueField: 'identificacion',
                                                    listeners: {
                                                        keyup: {
                                                            fn: me.onComboboxKeyup1,
                                                            scope: me
                                                        },
                                                        blur: {
                                                            fn: me.onComboboxBlur1,
                                                            scope: me
                                                        },
                                                        select: {
                                                            fn: me.onComboboxSelect3,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'displayfield',
                                                    flex: 1,
                                                    name: 'digitoverificacion',
                                                    value: 'D.V -0'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'Nombre',
                                            name: 'nombres'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'Direccion',
                                            name: 'direccion'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'Teléfonos',
                                            name: 'telefonos'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'E-Mail',
                                            name: 'email'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    title: 'Datos Complementarios',
                                    items: [
                                        {
                                            xtype: 'fieldcontainer',
                                            height: 27,
                                            layout: {
                                                align: 'stretch',
                                                type: 'hbox'
                                            },
                                            fieldLabel: 'Ubicación',
                                            items: [
                                                {
                                                    xtype: 'combobox',
                                                    margin: '0 1 0 0',
                                                    width: 102,
                                                    name: 'idpais',
                                                    editable: false,
                                                    displayField: 'nombre',
                                                    queryMode: 'local',
                                                    store: 'dumyStore',
                                                    valueField: 'idpais',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onComboboxChange3,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    margin: '0 1 0 0',
                                                    width: 100,
                                                    name: 'iddepartamento',
                                                    editable: false,
                                                    displayField: 'nombre',
                                                    queryMode: 'local',
                                                    store: 'dumyStore',
                                                    valueField: 'iddepartamento',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onComboboxChange4,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    margin: '0 1 0 0',
                                                    width: 138,
                                                    name: 'idmunicipio',
                                                    editable: false,
                                                    displayField: 'nombre',
                                                    queryMode: 'local',
                                                    store: 'dumyStore',
                                                    valueField: 'idmunicipio'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'Nombre Abrev',
                                            name: 'nombreabreviado'
                                        }
                                    ]
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'bottom',
                                    items: [
                                        {
                                            xtype: 'buttongroup',
                                            title: 'Acciones',
                                            columns: 4,
                                            layout: {
                                                columns: 4,
                                                type: 'table'
                                            },
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    iconCls: 'icon-page_save',
                                                    text: 'Guardar',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick1,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'tbfill'
                                        },
                                        {
                                            xtype: 'buttongroup',
                                            columns: 2,
                                            layout: {
                                                columns: 2,
                                                type: 'table'
                                            },
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    iconCls: 'icon-door_out',
                                                    text: 'Salir',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            id: 'datosPersonal',
                            bodyPadding: 10,
                            title: 'Personal V.I.P',
                            url: 'clases/interfaces/mantenimiento/local/InterfazEmpresa.php',
                            items: [
                                {
                                    xtype: 'fieldset',
                                    title: 'Datos Empresariales',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            anchor: '100%',
                                            fieldLabel: 'Cargo ',
                                            name: 'idcargo',
                                            value: 0,
                                            editable: false,
                                            displayField: 'nombre',
                                            queryMode: 'local',
                                            store: 'dumyStore',
                                            valueField: 'idcargo',
                                            listeners: {
                                                change: {
                                                    fn: me.onComboboxChange2,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    padding: '0 10 0 10',
                                    title: 'Datos Personales',
                                    items: [
                                        {
                                            xtype: 'hiddenfield',
                                            anchor: '100%',
                                            fieldLabel: 'Label',
                                            name: 'idpersona'
                                        },
                                        {
                                            xtype: 'hiddenfield',
                                            anchor: '100%',
                                            fieldLabel: 'Label',
                                            name: 'idpersonal'
                                        },
                                        {
                                            xtype: 'fieldcontainer',
                                            height: 27,
                                            margin: 0,
                                            padding: 0,
                                            layout: {
                                                align: 'stretch',
                                                type: 'hbox'
                                            },
                                            fieldLabel: 'Identificación',
                                            items: [
                                                {
                                                    xtype: 'combobox',
                                                    flex: 1,
                                                    margins: '0',
                                                    margin: '0 1 0 0',
                                                    padding: 0,
                                                    width: 68,
                                                    labelPad: 0,
                                                    name: 'idtipoidentificacion',
                                                    value: 0,
                                                    editable: false,
                                                    displayField: 'abreviatura',
                                                    queryMode: 'local',
                                                    store: 'dumyStore',
                                                    valueField: 'idtipoidentificacion',
                                                    listeners: {
                                                        select: {
                                                            fn: me.onComboboxSelect1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    flex: 4,
                                                    margins: '0',
                                                    margin: '0 1 0 0',
                                                    padding: 0,
                                                    width: 234,
                                                    labelPad: 0,
                                                    name: 'identificacion',
                                                    enableKeyEvents: true,
                                                    hideTrigger: true,
                                                    autoSelect: false,
                                                    displayField: 'identificacion',
                                                    minChars: 5,
                                                    queryParam: 'identificacion',
                                                    store: 'dumyStore',
                                                    valueField: 'identificacion',
                                                    listeners: {
                                                        keyup: {
                                                            fn: me.onComboboxKeyup,
                                                            scope: me
                                                        },
                                                        blur: {
                                                            fn: me.onComboboxBlur,
                                                            scope: me
                                                        },
                                                        select: {
                                                            fn: me.onComboboxSelect,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'Nombres',
                                            name: 'nombres'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'Apellidos',
                                            name: 'apellidos'
                                        },
                                        {
                                            xtype: 'combobox',
                                            anchor: '100%',
                                            fieldLabel: 'Nacionalidad',
                                            name: 'idpais',
                                            value: 0,
                                            editable: false,
                                            autoSelect: false,
                                            displayField: 'nacionalidad',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'dumyStore',
                                            valueField: 'idpais'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'Dirección',
                                            name: 'direccion'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'Teléfonos',
                                            name: 'telefonos'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            fieldLabel: 'E-Mail',
                                            name: 'email'
                                        },
                                        {
                                            xtype: 'radiogroup',
                                            fieldLabel: 'Sexo',
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'sexo',
                                                    boxLabel: 'Masculino',
                                                    checked: true,
                                                    inputValue: '1'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'sexo',
                                                    boxLabel: 'Femenino',
                                                    inputValue: '2'
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            tabConfig: {
                                xtype: 'tab',
                                listeners: {
                                    activate: {
                                        fn: me.onTabActivate,
                                        scope: me
                                    }
                                }
                            },
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'bottom',
                                    items: [
                                        {
                                            xtype: 'buttongroup',
                                            title: 'Acciones',
                                            columns: 4,
                                            layout: {
                                                columns: 4,
                                                type: 'table'
                                            },
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    iconCls: 'icon-page_save',
                                                    text: 'Guardar',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick2,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'tbfill'
                                        },
                                        {
                                            xtype: 'buttongroup',
                                            columns: 2,
                                            layout: {
                                                columns: 2,
                                                type: 'table'
                                            },
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    iconCls: 'icon-door_out',
                                                    text: 'Salir',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                show: {
                    fn: me.onWindowShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onComboboxSelect2: function(combo, records, eOpts) {
        var combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=identificacion]')[0];
        this.traerPersona('datosBasicos', records[0].get('idtipoidentificacion'), combo.getValue());
    },

    onComboboxKeyup1: function(textfield, e, eOpts) {
        siadno.limpiarFormulario('AdministracionLocalNotaria form[id=datosBasicos]', null, ['idtipoidentificacion', 'identificacion']);
        var key=e.getKey();
        if(key==13){        
            var comboIdTipoIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=idtipoidentificacion]')[0];
            var comboIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=identificacion]')[0];        
            this.traerPersona('datosBasicos', comboIdTipoIdentificacion.getValue(), comboIdentificacion.getValue());
        }
    },

    onComboboxBlur1: function(field, eOpts) {
        var hidden=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] hidden[name=idpersona]')[0];
        var idPersona=hidden.getValue();
        if(Ext.isEmpty(idPersona)){    
            var comboIdTipoIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=idtipoidentificacion]')[0];    
            var comboIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=identificacion]')[0];            
            this.traerPersona('datosBasicos', comboIdTipoIdentificacion.getValue(), comboIdentificacion.getValue());    
        }
    },

    onComboboxSelect3: function(combo, records, eOpts) {
        combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=idtipoidentificacion]')[0];
        combo.setValue(records[0].get('idtipoidentificacion')); 

        var comboIdTipoIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=idtipoidentificacion]')[0];    
        var comboIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=identificacion]')[0];            
        this.traerPersona('datosBasicos', comboIdTipoIdentificacion.getValue(), records[0].get('identificacion'));    
    },

    onComboboxChange3: function(field, newValue, oldValue, eOpts) {
        var combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=iddepartamento]')[0];
        combo.getStore().getProxy().extraParams={idpais:newValue};    
        combo.getStore().load();
    },

    onComboboxChange4: function(field, newValue, oldValue, eOpts) {
        var combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=idmunicipio]')[0];
        combo.getStore().getProxy().extraParams={iddepartamento:newValue};    
        combo.getStore().load();    
    },

    onButtonClick1: function(button, e, eOpts) {
        siadno.enviarFormulario.call(this, false, 'AdministracionLocalNotaria form[id=datosBasicos]', {accion:this.GUARDAR_NOTARIA}, null, null);
    },

    onButtonClick: function(button, e, eOpts) {
        this.close();
    },

    onComboboxChange2: function(field, newValue, oldValue, eOpts) {
        if(newValue!=oldValue){
            this.traerPersonal();
        }
    },

    onComboboxSelect1: function(combo, records, eOpts) {
        var combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=identificacion]')[0];
        this.traerPersona('datosPersonal', records[0].get('idtipoidentificacion'), combo.getValue());
    },

    onComboboxKeyup: function(textfield, e, eOpts) {
        siadno.limpiarFormulario('AdministracionLocalNotaria form[id=datosPersonal]', null, ['idtipoidentificacion', 'identificacion', 'idcargo']);
        var key=e.getKey();
        if(key==13){        
            var comboIdTipoIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=idtipoidentificacion]')[0];
            var comboIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=identificacion]')[0];        
            this.traerPersona('datosPersonal', comboIdTipoIdentificacion.getValue(), comboIdentificacion.getValue());
        }
    },

    onComboboxBlur: function(field, eOpts) {
        var hidden=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] hidden[name=idpersona]')[0];
        var idPersona=hidden.getValue();
        if(Ext.isEmpty(idPersona)){    
            var comboIdTipoIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=idtipoidentificacion]')[0];    
            var comboIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=identificacion]')[0];            
            this.traerPersona('datosPersonal', comboIdTipoIdentificacion.getValue(), comboIdentificacion.getValue());    
        }
    },

    onComboboxSelect: function(combo, records, eOpts) {
        combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=idtipoidentificacion]')[0];
        combo.setValue(records[0].get('idtipoidentificacion')); 
        var comboIdTipoIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=idtipoidentificacion]')[0];    
        var comboIdentificacion=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=identificacion]')[0];            
        this.traerPersona('datosPersonal', comboIdTipoIdentificacion.getValue(), records[0].get('identificacion'));    
    },

    onTabActivate: function(tab, eOpts) {
        var combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=idcargo]')[0];
        combo.bindStore(Ext.create('siadno.store.sistema.cargos'));
        combo.getStore().load(); 

        combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=identificacion]')[0];
        combo.bindStore(Ext.create('siadno.store.sistema.personasNaturales'));
        var listConfig={
            loadingText: 'Buscando...',
            emptyText: 'No se encontraron personas.',               
            getInnerTpl: function() {
                return '<div>{abreviatura} {identificacion}</div><div>{nombres}</div>';                    
            }
        };
        combo.listConfig=listConfig;

        combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=idtipoidentificacion]')[0];
        combo.bindStore(Ext.create('siadno.store.sistema.tiposIdentificacionPersonaNatural'));
        combo.getStore().load(); 

        combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosPersonal] combobox[name=idpais]')[0];
        combo.bindStore(Ext.create('siadno.store.sistema.paises'));
        combo.getStore().load(); 
    },

    onButtonClick2: function(button, e, eOpts) {
        siadno.enviarFormulario.call(this, false, 'AdministracionLocalNotaria form[id=datosPersonal]', {accion:this.GUARDAR_PERSONAL}, null, null);
    },

    onButtonClick: function(button, e, eOpts) {
        this.close();
    },

    onWindowShow: function(component, eOpts) {
        var clase=Ext.ClassManager.get("siadno.store.sistema.tiposIdentificacionPersonaJuridica");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.sistema.tiposIdentificacionPersonaJuridica', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: false,
                        storeId: Ext.id(),
                        proxy: {
                            type: 'ajax',
                            url: 'clases/data/sistema/tiposIdentificacion.php',
                            extraParams:{esPersonaNatural:0},
                            reader: {
                                type: 'json',
                                idProperty: 'idtipoidentificacion',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idtipoidentificacion'
                        },
                        {
                            name: 'nombre'
                        },
                        {
                            name: 'abreviatura'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }

        var clase=Ext.ClassManager.get("siadno.store.sistema.tiposIdentificacionPersonaNatural");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.sistema.tiposIdentificacionPersonaNatural', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: false,
                        storeId: Ext.id(),
                        proxy: {
                            type: 'ajax',
                            url: 'clases/data/sistema/tiposIdentificacion.php',
                            extraParams:{esPersonaNatural:1},
                            reader: {
                                type: 'json',
                                idProperty: 'idtipoidentificacion',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idtipoidentificacion'
                        },
                        {
                            name: 'nombre'
                        },
                        {
                            name: 'abreviatura'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }

        clase=Ext.ClassManager.get("siadno.store.sistema.paises");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.sistema.paises', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: false,
                        storeId: Ext.id(),
                        proxy: {
                            type: 'ajax',
                            url: 'clases/data/sistema/paises.php',
                            reader: {
                                type: 'json',
                                idProperty: 'idpais',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idpais'
                        },
                        {
                            name: 'nacionalidad'
                        },
                        {
                            name: 'nombre'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }

        clase=Ext.ClassManager.get("siadno.store.sistema.departamentos");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.sistema.departamentos', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: false,
                        storeId: Ext.id(),
                        proxy: {
                            type: 'ajax',
                            url: 'clases/data/sistema/departamentos.php',
                            reader: {
                                type: 'json',
                                idProperty: 'iddepartamento',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'iddepartamento'
                        },
                        {
                            name: 'idpais'
                        },
                        {
                            name: 'nombre'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }

        clase=Ext.ClassManager.get("siadno.store.sistema.municipios");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.sistema.municipios', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: false,
                        storeId: Ext.id(),
                        proxy: {
                            type: 'ajax',
                            url: 'clases/data/sistema/municipios.php',
                            reader: {
                                type: 'json',
                                idProperty: 'idmunicipio',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idmunicipio'
                        },
                        {
                            name: 'iddepartamento'
                        },
                        {
                            name: 'nombre'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }

        clase=Ext.ClassManager.get("siadno.store.sistema.personasJuridicas");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.sistema.personasJuridicas', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        storeId: Ext.id(),
                        proxy: {
                            type: 'ajax',
                            url: 'clases/data/sistema/personas.php',                    
                            extraParams:{esPersonaNatural:0},
                            reader: {
                                type: 'json',
                                idProperty: 'idpersona',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idpersona'
                        },
                        {
                            name: 'idtipoidentificacion'
                        },
                        {
                            name: 'identificacion'
                        },
                        {
                            name: 'abreviatura'
                        },
                        {
                            name: 'nombres'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }

        clase=Ext.ClassManager.get("siadno.store.sistema.personasNaturales");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.sistema.personasNaturales', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        storeId: Ext.id(),
                        proxy: {
                            type: 'ajax',
                            url: 'clases/data/sistema/personas.php',                    
                            extraParams:{esPersonaNatural:1},
                            reader: {
                                type: 'json',
                                idProperty: 'idpersona',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idpersona'
                        },
                        {
                            name: 'idtipoidentificacion'
                        },
                        {
                            name: 'identificacion'
                        },
                        {
                            name: 'abreviatura'
                        },
                        {
                            name: 'nombres'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }


        clase=Ext.ClassManager.get("siadno.store.sistema.cargos");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.sistema.cargos', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        autoLoad: false,
                        storeId: Ext.id(),
                        proxy: {
                            type: 'ajax',
                            url: 'clases/data/sistema/cargos.php',
                            reader: {
                                type: 'json',
                                idProperty: 'idcargo',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'idcargo'
                        },                
                        {
                            name: 'nombre'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }


        var combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=identificacion]')[0];

        combo.bindStore(Ext.create('siadno.store.sistema.personasJuridicas'));
        var listConfig={
            loadingText: 'Buscando...',
            emptyText: 'No se encontraron empresas.',               
            getInnerTpl: function() {
                return '<div>{abreviatura} {identificacion}</div><div>{nombres}</div>';                    
            }
        };
        combo.listConfig=listConfig;


        combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=idtipoidentificacion]')[0];

        combo.bindStore(Ext.create('siadno.store.sistema.tiposIdentificacionPersonaJuridica'));
        combo.getStore().load(); 

        combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=idpais]')[0];

        combo.bindStore(Ext.create('siadno.store.sistema.paises'));
        combo.getStore().load(); 

        combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=iddepartamento]')[0];

        combo.bindStore(Ext.create('siadno.store.sistema.departamentos'));
        combo.getStore().load(); 

        combo=Ext.ComponentQuery.query('AdministracionLocalNotaria form[id=datosBasicos] combobox[name=idmunicipio]')[0];

        combo.bindStore(Ext.create('siadno.store.sistema.municipios'));
        combo.getStore().load(); 


        siadno.enviarFormulario.call(this, true, 'AdministracionLocalNotaria form[id=datosBasicos]',{accion:this.CARGAR_NOTARIA}, null, null);
    },

    traerPersona: function(idFormulario, idtipoidentificacion, identificacion) {
        var callback=function(){        
        };
        siadno.enviarFormulario.call(this, true, 'AdministracionLocalNotaria form[id='+idFormulario+']',{idtipoidentificacion:idtipoidentificacion, identificacion:identificacion}, callback, null);
    },

    traerPersonal: function() {
        var combo=Ext.ComponentQuery.query('AdministracionLocalNotaria combobox[name=idcargo]')[0];
        var callback=function(){        
            //alert('retorna personal');
        };
        siadno.enviarFormulario.call(this, true, 'AdministracionLocalNotaria form[id=datosPersonal]',{accion:this.CARGAR_PERSONAL, idcargo:combo.getValue()}, callback, null);
    }

});