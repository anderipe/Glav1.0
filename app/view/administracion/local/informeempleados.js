/*
 * File: app/view/administracion/local/informeempleados.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('siadno.view.administracion.local.informeempleados', {
    extend: 'Ext.window.Window',
    alias: 'widget.AdministracionLocalInformeempleados',

    height: 600,
    width: 800,
    layout: {
        align: 'stretch',
        type: 'vbox'
    },
    iconCls: 'icon-group',
    title: 'Listado de Empleados',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    store: 'dumyStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            width: 135,
                            dataIndex: 'identificacion',
                            text: 'Identificacion',
                            flex: 5
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 116,
                            dataIndex: 'nombres',
                            text: 'Nombres',
                            flex: 10
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 199,
                            dataIndex: 'direccion',
                            text: 'Dirección',
                            flex: 10
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 93,
                            dataIndex: 'telefonos',
                            text: 'Teléfono',
                            flex: 7
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(value==1){
                                    return 'Activo';
                                }else{
                                    return 'In-Activo';
                                }
                                return value;
                            },
                            width: 86,
                            dataIndex: 'estado',
                            text: 'Estado',
                            flex: 5
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            width: 360,
                            displayInfo: true,
                            store: 'dumyStore',
                            items: [
                                {
                                    xtype: 'tbseparator'
                                },
                                {
                                    xtype: 'button',
                                    id: 'pdf',
                                    iconCls: 'icon-pdf',
                                    listeners: {
                                        click: {
                                            fn: me.onPdfClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    id: 'excel',
                                    iconCls: 'icon-excel',
                                    listeners: {
                                        click: {
                                            fn: me.onExcelClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'tbseparator'
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                beforeshow: {
                    fn: me.onWindowBeforeShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onPdfClick: function(button, e, eOpts) {
        var grid=Ext.ComponentQuery.query('AdministracionLocalInformeempleados pagingtoolbar')[0];

        var callback=function(records, operation, succes){
            try{                    
                var result = Ext.decode(operation.response.responseText);        
                siadno.descargarPostConsulta(result);
            }catch(e){            
                if(!Ext.isEmpty(e.message)){
                    Ext.MessageBox.alert('Error codificar la respuesta', e.message);
                }else{
                    Ext.MessageBox.alert('Error codificar la respuesta', e);
                }        
            }
        }

        grid.getStore().getProxy().extraParams.pdf=1;
        grid.getStore().load({scope:this, callback:callback});
        grid.getStore().getProxy().extraParams.pdf=0;
    },

    onExcelClick: function(button, e, eOpts) {
        var grid=Ext.ComponentQuery.query('AdministracionLocalInformeempleados pagingtoolbar')[0];

        var callback=function(records, operation, succes){
            try{                    
                var result = Ext.decode(operation.response.responseText);        
                siadno.descargarPostConsulta(result);
            }catch(e){            
                if(!Ext.isEmpty(e.message)){
                    Ext.MessageBox.alert('Error codificar la respuesta', e.message);
                }else{
                    Ext.MessageBox.alert('Error codificar la respuesta', e);
                }        
            }
        }

        grid.getStore().getProxy().extraParams.excel=1;
        grid.getStore().load({scope:this, callback:callback});
        grid.getStore().getProxy().extraParams.excel=0;
    },

    onWindowBeforeShow: function(component, eOpts) {
        //paginador.moveFirst();
        //this.application.activarToolbar('AdministracionLocalAuditoriaInforme', true);
        clase=Ext.ClassManager.get("siadno.store.administracion.informeempleados");
        if(Ext.isEmpty(clase)){
            Ext.define('siadno.store.administracion.informeempleados', {
                extend: 'Ext.data.Store',

                constructor: function(cfg) {
                    var me = this;
                    cfg = cfg || {};
                    me.callParent([Ext.apply({
                        storeId: Ext.id(),
                        pageSize: 18,
                        proxy: {
                            type: 'ajax',
                            url: 'clases/interfaces/mantenimiento/local/InterfazListadoEmpleados.php',
                            reader: {
                                type: 'json',
                                idProperty: 'nombres',
                                messageProperty: 'msg',
                                root: 'data'
                            }
                        },
                        fields: [
                        {
                            name: 'identificacion'
                        },
                        {
                            name: 'nombres'
                        },
                        {
                            name: 'direccion'
                        },
                        {
                            name: 'telefonos'
                        },
                        {
                            name: 'estado'
                        }
                        ]
                    }, cfg)]);
                }
            });
        }


        var grid=Ext.ComponentQuery.query('AdministracionLocalInformeempleados grid')[0];
        grid.informeStore=Ext.create('siadno.store.administracion.informeempleados');
        grid.reconfigure(grid.informeStore);

        var paginador=Ext.ComponentQuery.query('AdministracionLocalInformeempleados pagingtoolbar')[0];
        paginador.bindStore(grid.informeStore);


    }

});